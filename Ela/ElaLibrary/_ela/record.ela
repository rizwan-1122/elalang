/* 
  Module record
  Created in 2012 by Basil Voronkov
*/
import libRecord#elalib@r

hasField (fld is string) (rec is record) = r.hasField fld rec

addFields (fields is record) (rec is record) = r.addFields fields rec
addField (fld is string) val (rec is record) = r.addField fld val rec

removeFields = collect r.removeFields []
removeField (fld is string) (rec is record) = r.removeField fld rec

changeField (fld is string) val (rec is record) = r.changeField fld val rec

field n rec = rec `rf` n
  where rf = __internal recfield

fields (rec is record) = r.fields rec

//This function is used to collect field names
collect # private
collect fn xs (x is string) = collect fn (x::xs)
collect fn xs (x is record) = fn xs x

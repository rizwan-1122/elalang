/* 
    Module cell
    Created in 2012 by Basil Voronkov
*/
open qualified libCell#elalib@cl

/* Construction */
type cell 
  where ref x = RefCell (cl.cell x)

/* Instances */
instance Eq cell
  where (RefCell x) == (RefCell y) = x == y
        (RefCell x) <> (RefCell y) = x <> y

instance Show cell
  where showf fmt (RefCell x) = "<cell:" ++ showf fmt x ++ ">"

/* Functions */
mutate e (RefCell x) = ref <| cl.mutate (force e) x

valueof (RefCell x) = cl.valueof x

c.+ = mutate (valueof c + 1) c

c.- = mutate (valueof c - 1) c

c := e = mutate e c
let fromLiteral {eq} =
                    let rec' = {lang="Ela", dev="Basil"} in
                    eq (length rec') 2
                    $ eq rec'.[0] "Ela" 
                    $ eq rec'.[1] "Basil" 
                    $ eq rec'.lang "Ela" 
                    $ eq rec'.dev "Basil"
                    $ eq rec'.["lang"] "Ela"
                    $ eq rec'.["dev"] "Basil"
    
let fromLiteral2 {eq} = 
                    eq rec'.["font-color"] "red"
                    $ eq rec'.["text-decoration"] "none"
                    where rec' = {"font-color"="red","text-decoration"="none"}

let equals {eq,neq} =
            eq r1 r2
            $ neq r1 r3
            where r1 = {x=1,y="word",z='c'} and
                  r2 = {x=1,y="word",z='c'} and
                  r3 = {x=1,y="WORD",z='C'}

let changeItem {eq} =
                let rec' = {!x=1} in
                rec'.x <- 2
                $ eq rec'.x 2
                $ rec'.[0] <- 22
                $ eq rec'.x 22
                $ rec'.["x"] <- 222
                $ eq rec'.x 222

let typeCheck {eqt} =
                    let rec' = {x=0} in
                    eqt (rec' is ?record)
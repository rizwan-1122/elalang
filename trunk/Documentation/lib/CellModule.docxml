<?xml-stylesheet type="text/xsl" href="Template.xsl"?>
<article title="Lib.Cell">

<section level="1" title="Introduction" />
Module Cell adds a support for mutating state. It contains an implementation of a reference cell (similar to ML languages) and functions
to interact with it.

<section level="1" title="Functions" />


<section level="2" title="cell"/>
<code>
cell x
</code>
Wraps a given value and returns a new reference cell.

<section level="2" title="mutate"/>
<code>
mutate x cl
</code>
Changes a value inside a cell <key>cl</key> to a value <key>x</key>.

<section level="2" title="valueof"/>
<code>
valueof cl
</code>
Unwraps a value from reference cell <key>cl</key>. For example, the following code evaluates to <key>12</key>:
<code>
let r = cell 10
mutate ((valueof r) + 2) r $
valueof r
</code>

<section level="1" title="Referencing module" />
Cell module is a part of Ela standard library. It can be referenced from code using <key>open</key> directive like so:
<code>open Cell#elalib</code>
or simply
<code>open Cell</code>
</article>
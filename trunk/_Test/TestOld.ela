open Ela[Test] as Mod with feach = forEach, pr = print, idle

let Option = | Some(x) | None
	with o
	someConstant: 23435111
	test: let adt = Nop with od fake: 3
	toStr(): match (o) | Some(x) -> "Some=" + x :> string | None() -> "None";

let s = Option.Some(12)

cout s.toStr()

var rec = (Name: "Basil", Surname: "Voronkov", Age: 30)

var sum1(x, y) = x * y

var sum2 = (x, y) -> x * y

var sum3 = _ * _;



cout match s | Some(x) -> x | None() -> 0

cout "sum1:" + sum1(2, 3) :> string
cout "sum2:" + sum2(2, 3) :> string
cout "sum3:" + sum3(2, 3) :> string

/*
let sites = [ "http://www.live.com", "http://www.google.com" ]

let fetch(url) = (url, "<html>...</html>")
let iter(list, f) = | [],_ -> [] | x::xs,n -> n(x)::iter(xs, n);

iter(sites, fetch)

cout s.x


let test() = {
		var x = 33
		yield 33;
		x++
		cout "x is " + string(x)
	}
	
foreach (x in test())
	cout x;

idle();
Mod.print("some msg");
pr("another msg");

var x = 1
var y = 2
var x1 = 3
var y1 = 4

var res = _.ToString()

let t = (y, x, (y1, x1));

(x, y, (x1, y1)) = t;

(x, y, x1, y1)*/
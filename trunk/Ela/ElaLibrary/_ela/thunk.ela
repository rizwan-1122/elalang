/* 
  Module thunk
  Created in 2012 by Basil Voronkov
*/
import libCore#elalib@core lang

evaled = core.evaled

lazyList = lang.__isLazyList

forceAll (x is list)   = forceList (force x)
forceAll (x is tuple)  = forceTuple x
forceAll (x is record) = forceTuple x
forceAll x | evaled x = force x | else = forceAll (force x)

forceList (x::xs) = forceAll x :: forceList xs
forceList [] = []

forceOnlyList xs | lang.__isLazyList xs = force xs | else = xs
  where
    force (x::xs) = x :: force xs
    force [] = []

forceRecord r = forceTuple r

forceTuple (x,y) = (forceAll x,forceAll y)
forceTuple (x,y,z) = (forceAll y,forceAll y,forceAll z)
forceTuple tup = lang.__tupleFromList (force 0)
  where len = length tup 
        force i | i == len = []
                | else = forceAll (tup:i) :: force (i+1)

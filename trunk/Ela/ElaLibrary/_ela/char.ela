/* 
  Module char
  Created in 2012 by Basil Voronkov
*/
import libChar#elalib@ch

max # qualified
max = '\x65535'

min # qualified
min = '\0'

zero # qualified
zero = min

instance Additive char
  where x+y = toChar (toInt x + toInt y)
        x-y = toChar (toInt x - toInt y)
        --x = zero - x

lower (c is char) = ch.lower c
upper (c is char) = ch.upper c

isUpper (c is char) = ch.isUpper c
isLower (c is char) = ch.isLower c

isControl (c is char) = ch.isControl c
isDigit (c is char) = ch.isDigit c
isLetter (c is char) = ch.isLetter c
isNumber (c is char) = ch.isNumber c
isPunctuation (c is char) = ch.isPunctuation c
isSeparator (c is char) = ch.isSeparator c
isSymbol (c is char) = ch.isSymbol c
isWhiteSpace (c is char) = ch.isWhiteSpace c

isSurrogate (c is char) = ch.isSurrogate c
isSurrogatePair (x is char) (y is char) = ch.isSurrogatePair x y


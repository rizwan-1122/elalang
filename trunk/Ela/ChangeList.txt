0.9.10.12:Change:Conversion logic of built-in types is altered, now all built-in types support conversion to string.
0.9.10.11:New:A new 'Has' op code is implemented. This op code is a new version of Hasfld op code and is supported by records and modules.
0.9.10.10:Change:A 'Silent' hint in compiler is no longer used. 
0.9.10.9:Change:Implementation of reflection logic for a module is optimized.
0.9.10.8:Change:Implementation of Conv op code is changed to support new style of type casts (using functions toInt, toLong, etc.).
0.9.10.7:Change:The following op codes are decomissioned: Elem, Skiphtag, Skiptag, Br_eq, Br_neq, Br_lt, Br_gt, Brnil, Skiptl, Skiptn. All these op codes are now replaced by a combination of low level op codes.
0.9.10.6:Change:'CastNotSupported' error is no longer generated by a compiler and is decomissioned.
0.9.10.5:Change:Op code Pat is decomissioned. Now VM doesn't check if an object supports a particular match pattern. It tries to apply a pattern instead and raises an exception of a pattern is not supported.
0.9.10.4:Change:Op code Hasfld is decomissioned.
0.9.10.3:Change:Op codes Pushfld and Popfld are now decomissioned. Once should 'indexer' access style instead (op codes Popelem and Pushelem).
0.9.10.2:Change:An 'is' pattern is now decomissioned (syntax like 'x is ?int' is not allowed anymore). One should check tag instead (e.g. 'x is Int#' for a primitive).
0.9.10.1:Change:Built-in type conversion syntax is decomissioned (op code, AST node, compilation logic, etc.). Now once should use regular Prelude functions like toInt, toTuple, etc.
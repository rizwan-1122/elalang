/*cout "Starting";
//var res = async { sleep 2000; 2 + 2; };
//cout &res;

var laz = lazy { 12 * 3 - 8; };
cout laz;
cout &laz + &laz;*/

open Test as ela with forEach;


let arr = ela.getList(1000*1000);

let fold(func, list, initVal)
{
	var ret = initVal;

	foreach (e in list)
		ret = func(e, ret);
		
	ret;
};

fold(_ + _, arr, 0);
	
//forEach(arr, x -> let y = 12);

//arr;
/*
var list = [0, 1, 2, 3];

open SqrtModule as Sqrt with Option;

var l = ( Name := "Basil", Surname := "Voronkov", Age := (29, 30, 31) );

let f = l -> 
	| is list -> "list"
	| is table -> "table"
	| _ -> "any";
	
f(l);

let opt = Option.Some(122);
match(opt) | Some(x := 122) -> "Some" | None() -> "None";*/
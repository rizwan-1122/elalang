open Con
open Char
open Cell
 
//Implementation of HQ9+ interpreter
let eval src = eval' (toList src)
      where eval' [] = ()
            eval' (x::xs) | be 'H' = h! $ eval' xs
                          | be 'Q' = q! $ eval' xs
                          | be '9' = n! $ eval' xs
                          | be '+' = p! $ eval' xs
                          | else = fail ("Unrecognized " ++ x)
                          where ref = cell 0
                            et be c = upper x == c
                            et h () = writen "Hello, world!"
                            et q () = writen src
                            et p () = ref |> mutate (valueof ref + 1)
                            et n () = bottles [99,98..1]
                                 where bottles [] = ()
                                       bottles (x::xs) = rec write 
                                         x " bottles of beer of the wall\r\n"
                                         x " bottles of beer\r\n"
                                         "Take one down, pass it around\r\n"
                                         $ bottles xs

//Let's evaluate the main program in HQ9+ 
eval "HQ9+"

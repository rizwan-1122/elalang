<?xml-stylesheet type="text/xsl" href="Template.xsl"?>
<article title="Lib.Record" type="module">

<section level="1" title="Introduction" />
Record module contains functions that operate with records.

<section level="1" title="Functions" />

<section level="2" title="hasField"/>
<code>
hasField fld rec
</code>
Returns <key>true</key> if a record <key>rec</key> has a field <key>fld</key>, otherwise returns <key>false</key>:
<code>let rec = { foo = "Foo", bar = "Bar" }
hasField "foo" rec == true</code>

<section level="2" title="addFields"/>
<code>
addFields fields rec
</code>
Concatenates two records. This function has the same effect as record concatenation operator:
<code>addFields {y=2} {x=1} == {x=1,y=2}</code>

<section level="2" title="removeFields"/>
<code>
removeFields fields rec
</code>
Removes fields specified as a tuple <key>fields</key> from a record <key>rec</key>. This function always creates a new record:
<code>let rec = {x=1,y=2}
removeFields ("y",) rec == {x=1}</code>

<section level="1" title="Referencing module" />
Record module is a part of Ela standard library. It can be referenced from code using <key>open</key> directive like so:
<code>open Record</code>
</article>